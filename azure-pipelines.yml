# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  # Build variables
  solution: '**/*.sln'
  buildPath: '$(Build.SourcesDirectory)/build'

  # Cache variables
  dotnet8Sdk: '8.0.x'
  dotnet8SdkCacheKey: 'dotnet-sdk-$(dotnet8Sdk)'
  dotnet7Sdk: '7.0.x'
  dotnet7SdkCacheKey: 'dotnet-sdk-$(dotnet7Sdk)'

steps:

# Cache .NET Core SDK
- task: Cache@2
  inputs:
    key: '$(dotnet8SdkCacheKey)'
    path: '$(Agent.TempDirectory)/dncs'
    cacheHitVar: CACHE_RESTORED
  displayName: Cache .NET 8 Core SDK

- task: Cache@2
  inputs:
    key: '$(dotnet7SdkCacheKey)'
    path: '$(Agent.TempDirectory)/dncs'
    cacheHitVar: CACHE_RESTORED
  displayName: Cache .NET 7 Core SDK


# Install dependencies  
- task: UseDotNet@2
  displayName: 'Use .NET 8.0'
  inputs:
    packageType: sdk
    version: '$(dotnet8Sdk)'
    installationPath: '$(Agent.TempDirectory)/dncs'
  condition: ne(variables.CACHE_RESTORED, 'true')
  
  # Temporary until dotnet tool nuget-license support .NET 8.0  
# See https://github.com/tomchavakis/nuget-license/issues/200
- task: UseDotNet@2
  displayName: 'Use .NET 7.0 (Required by nuget-license)'
  inputs:
    packageType: sdk
    version: '$(dotnet7Sdk)'
    installationPath: '$(Agent.TempDirectory)/dncs'
  condition: ne(variables.CACHE_RESTORED, 'true')

- task: DotNetCoreCLI@2
  displayName: 'Restore tools'
  inputs:
    command: custom
    custom: tool
    arguments: 'restore'
    workingDirectory: '$(buildPath)'

- task: DotNetCoreCLI@2
  displayName: 'Build binaries'
  inputs:
    command: custom
    custom: tool
    arguments: 'run dotnet-script main.csx -t build-msi'  
    workingDirectory: '$(buildPath)'
